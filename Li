--[[
完整可 loadstring 的通知模块
链式用法：
local Shattuck = loadstring(game:HttpGet("你的URL"))()
Shattuck.Notify():Script("上文本"):Name("下文本"):rainbow(true):transparency(false):Duration(5):Show()
]]

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local Shattuck = {}
local activeNotifications = {}

-- 内联简单 Creator 功能
local Creator = {}
function Creator.New(Class, Props, Children)
    local Inst = Instance.new(Class)
    if Props then
        for k,v in pairs(Props) do
            Inst[k] = v
        end
    end
    if Children then
        for _,c in pairs(Children) do
            c.Parent = Inst
        end
    end
    return Inst
end
function Creator.Tween(Obj, Time, Props)
    local info = TweenInfo.new(Time, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)
    local tween = TweenService:Create(Obj, info, Props)
    tween:Play()
    return tween
end

-- 配置
local CONFIG = {
    WIDTH = 220,
    SPACING = 8,
    OFFSET_X = 20,
    OFFSET_Y = 20,
    CORNER_RADIUS = 8,
    TITLE = {FONT=Enum.Font.GothamBold, SIZE=16, COLOR=Color3.fromRGB(255,255,255)},
    MESSAGE = {FONT=Enum.Font.Gotham, SIZE=14, COLOR=Color3.fromRGB(220,220,220)},
    ANIMATION = {DURATION=0.4, STYLE=Enum.EasingStyle.Elastic, DIR=Enum.EasingDirection.Out}
}

local blendColors = {Color3.fromRGB(0,255,255), Color3.fromRGB(255,0,255), Color3.fromRGB(255,105,180)}

-- 通知实例类
local NotifyClass = {}
NotifyClass.__index = NotifyClass

function Shattuck.Notify()
    local self = setmetatable({}, NotifyClass)
    self._Script = ""
    self._Name = ""
    self._Rainbow = false
    self._Transparency = false
    self._Duration = 4
    return self
end

function NotifyClass:Script(text) self._Script = text or "" return self end
function NotifyClass:Name(text) self._Name = text or "" return self end
function NotifyClass:rainbow(value) self._Rainbow = value or false return self end
function NotifyClass:transparency(value) self._Transparency = value or false return self end
function NotifyClass:Duration(value) self._Duration = value or 4 return self end

function NotifyClass:Show()
    local player = Players.LocalPlayer
    local gui = player:WaitForChild("PlayerGui"):FindFirstChild("NotificationGui")
    if not gui then
        gui = Instance.new("ScreenGui")
        gui.Name = "NotificationGui"
        gui.IgnoreGuiInset = true
        gui.ResetOnSpawn = false
        gui.DisplayOrder = 1000
        gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        gui.Parent = player.PlayerGui
    end

    local frame = Creator.New("Frame", {
        Size = UDim2.new(0, CONFIG.WIDTH, 0, 60),
        Position = UDim2.new(1, CONFIG.WIDTH, 0, CONFIG.OFFSET_Y),
        AnchorPoint = Vector2.new(1,0),
        BackgroundColor3 = Color3.fromRGB(0,0,0),
        BackgroundTransparency = self._Transparency and 0.7 or 0,
        BorderSizePixel = 0,
        ZIndex = 10,
        Parent = gui
    }, {
        Creator.New("UICorner",{CornerRadius=UDim.new(0,CONFIG.CORNER_RADIUS)})
    })

    local strokeConnection
    if self._Rainbow then
        local stroke = Creator.New("UIStroke",{Thickness=2, ApplyStrokeMode=Enum.ApplyStrokeMode.Border, Color=blendColors[1], Parent=frame})
        local colorTime = 0
        strokeConnection = RunService.RenderStepped:Connect(function(dt)
            colorTime += dt*0.5
            stroke.Color = blendColors[math.random(1,#blendColors)]
            if not frame or not frame.Parent then strokeConnection:Disconnect() end
        end)
    end

    local titleLabel = Creator.New("TextLabel",{
        Size = UDim2.new(1,-16,0,24),
        Position = UDim2.new(0,8,0,8),
        BackgroundTransparency = 1,
        Text = self._Script,
        Font = CONFIG.TITLE.FONT,
        TextSize = CONFIG.TITLE.SIZE,
        TextColor3 = CONFIG.TITLE.COLOR,
        TextXAlignment = Enum.TextXAlignment.Center,
        TextTransparency = 1,
        ZIndex = 11,
        Parent = frame
    })

    local messageLabel = Creator.New("TextLabel",{
        Size = UDim2.new(1,-16,0,24),
        Position = UDim2.new(0,8,0,28),
        BackgroundTransparency = 1,
        Text = self._Name,
        Font = CONFIG.MESSAGE.FONT,
        TextSize = CONFIG.MESSAGE.SIZE,
        TextColor3 = CONFIG.MESSAGE.COLOR,
        TextWrapped = true,
        TextXAlignment = Enum.TextXAlignment.Center,
        TextYAlignment = Enum.TextYAlignment.Top,
        TextTransparency = 1,
        ZIndex = 11,
        Parent = frame
    })

    local function adjustHeight()
        local titleH = titleLabel.TextBounds.Y
        local msgH = messageLabel.TextBounds.Y
        frame.Size = UDim2.new(0, CONFIG.WIDTH, 0, math.max(60, 8+titleH+4+msgH+8))
        local yOffset = CONFIG.OFFSET_Y
        for i,v in ipairs(activeNotifications) do
            if v.frame and v.frame.Parent then
                Creator.Tween(v.frame,0.3,{Position=UDim2.new(1,-CONFIG.OFFSET_X,0,yOffset)})
                yOffset = yOffset + v.frame.AbsoluteSize.Y + CONFIG.SPACING
            end
        end
    end
    titleLabel:GetPropertyChangedSignal("TextBounds"):Connect(adjustHeight)
    messageLabel:GetPropertyChangedSignal("TextBounds"):Connect(adjustHeight)
    adjustHeight()

    Creator.Tween(frame, CONFIG.ANIMATION.DURATION,{Position=UDim2.new(1,-CONFIG.OFFSET_X,0,CONFIG.OFFSET_Y)})
    Creator.Tween(titleLabel, 0.3,{TextTransparency=0})
    Creator.Tween(messageLabel, 0.3,{TextTransparency=0})

    table.insert(activeNotifications,{frame=frame})

    task.delay(self._Duration,function()
        Creator.Tween(frame,0.4,{Position=UDim2.new(1, CONFIG.WIDTH,0,CONFIG.OFFSET_Y)})
        Creator.Tween(titleLabel,0.3,{TextTransparency=1})
        Creator.Tween(messageLabel,0.3,{TextTransparency=1})
        task.delay(0.4,function()
            frame:Destroy()
            if strokeConnection then strokeConnection:Disconnect() end
            for i,v in ipairs(activeNotifications) do
                if v.frame == frame then table.remove(activeNotifications,i) break end
            end
        end)
    end)
end

return Shattuck
