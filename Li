local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local Shattuck = {}

local activeNotifications = {}

-- 辅助函数：线性插值彩虹颜色
local blendColors = {
    Color3.fromRGB(0, 255, 255), 
    Color3.fromRGB(255, 0, 255), 
    Color3.fromRGB(255, 105, 180)
}
local function interpolateColors(colors, t)
    local count = #colors
    local segment = math.floor(t * count) % count + 1
    local nextSegment = (segment % count) + 1
    local alpha = (t * count) % 1
    local c1, c2 = colors[segment], colors[nextSegment]
    return Color3.new(
        c1.R + (c2.R - c1.R) * alpha,
        c1.G + (c2.G - c1.G) * alpha,
        c1.B + (c2.B - c1.B) * alpha
    )
end

-- 主通知函数
function Shattuck.Notify()
    local Notification = {}
    Notification.TitleText = ""
    Notification.NameText = ""
    Notification.DurationTime = 5
    Notification.Rainbow = false
    Notification.Transparent = false

    function Notification:Script(txt)
        self.TitleText = txt
        return self
    end
    function Notification:Name(txt)
        self.NameText = txt
        return self
    end
    function Notification:rainbow(val)
        self.Rainbow = val
        return self
    end
    function Notification:transparency(val)
        self.Transparent = val
        return self
    end
    function Notification:Duration(sec)
        self.DurationTime = sec or 5
        return self
    end

    function Notification:Show()
        local player = Players.LocalPlayer
        local playerGui = player:WaitForChild("PlayerGui")

        -- 创建主框架
        local frame = Instance.new("Frame")
        frame.BackgroundColor3 = self.Transparent and Color3.fromRGB(0,0,0) or Color3.fromRGB(0,0,0)
        frame.BackgroundTransparency = self.Transparent and 0.5 or 0
        frame.AnchorPoint = Vector2.new(1, 0)
        frame.Position = UDim2.new(1, -20, 0, 20)
        frame.Size = UDim2.new(0, 250, 0, 0) -- 初始高度0，后面自动调整
        frame.Parent = playerGui

        local uicorner = Instance.new("UICorner")
        uicorner.CornerRadius = UDim.new(0, 5)
        uicorner.Parent = frame

        local titleLabel = Instance.new("TextLabel")
        titleLabel.Text = self.TitleText
        titleLabel.Font = Enum.Font.GothamBold
        titleLabel.TextSize = 18
        titleLabel.TextColor3 = Color3.fromRGB(255,255,255)
        titleLabel.BackgroundTransparency = 1
        titleLabel.Size = UDim2.new(1, -20, 0, 0)
        titleLabel.Position = UDim2.new(0, 10, 0, 10)
        titleLabel.TextWrapped = true
        titleLabel.Parent = frame

        local nameLabel = Instance.new("TextLabel")
        nameLabel.Text = self.NameText
        nameLabel.Font = Enum.Font.Gotham
        nameLabel.TextSize = 14
        nameLabel.TextColor3 = Color3.fromRGB(220,220,220)
        nameLabel.BackgroundTransparency = 1
        nameLabel.Size = UDim2.new(1, -20, 0, 0)
        nameLabel.Position = UDim2.new(0, 10, 0, 0)
        nameLabel.TextWrapped = true
        nameLabel.Parent = frame

        -- 自动调整高度
        titleLabel:GetPropertyChangedSignal("TextBounds"):Connect(function()
            local totalHeight = 10 + titleLabel.TextBounds.Y + (self.NameText ~= "" and 4 + nameLabel.TextBounds.Y or 0) + 10
            frame.Size = UDim2.new(0, 250, 0, totalHeight)
            nameLabel.Position = UDim2.new(0, 10, 0, 10 + titleLabel.TextBounds.Y + 4)
        end)

        nameLabel:GetPropertyChangedSignal("TextBounds"):Connect(function()
            local totalHeight = 10 + titleLabel.TextBounds.Y + (self.NameText ~= "" and 4 + nameLabel.TextBounds.Y or 0) + 10
            frame.Size = UDim2.new(0, 250, 0, totalHeight)
        end)

        -- 彩虹边框
        local stroke
        if self.Rainbow then
            stroke = Instance.new("UIStroke")
            stroke.Thickness = 2
            stroke.Parent = frame
            RunService.RenderStepped:Connect(function(dt)
                stroke.Color = interpolateColors(blendColors, tick()%1)
            end)
        end

        -- Tween显示动画
        frame.Position = UDim2.new(1, 300, 0, 20)
        TweenService:Create(frame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Position = UDim2.new(1, -20, 0, 20)
        }):Play()

        table.insert(activeNotifications, frame)

        -- 自动关闭
        task.delay(self.DurationTime, function()
            TweenService:Create(frame, TweenInfo.new(0.3), {Position = UDim2.new(1, 300, 0, 20)}):Play()
            task.wait(0.3)
            frame:Destroy()
            -- 移除已关闭通知
            for i, v in ipairs(activeNotifications) do
                if v == frame then
                    table.remove(activeNotifications, i)
                    break
                end
            end
        end)
    end

    return Notification
end

return Shattuck
